# spring.datasource.url=jdbc:postgresql://localhost:5432/vital
# spring.datasource.username = vital
# spring.datasource.password = vital

# server.port=8082

# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.properties.hibernate.format_sql = true
# Access-Control-Allow-Credentials : false
# Access-Control-Allow-Headers: *
# Access-Control-Allow-Origin: http://localhost:4200
# Access-Control-Expose-Headers: *
# Access-Control-Max-Age: 600
# Access-Control-Request-Headers: X-PINGOTHER, Content-Type,Authorization, X-Requested-With

spring:
  profiles:
        active: local
        include:
            - swagger
  datasource:
    url: jdbc:postgresql://localhost:5432/vital
    username: vital
    password: vital
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-plaform: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev
    default_schema: vital
  cors:
    allowed-origins: '*'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count'
    allow-credentials: true
    max-age: 1800
server:
  port: 8082